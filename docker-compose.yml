
services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - CONFIG=config/local.yaml
    depends_on:
      db:
        condition: service_healthy
    networks:
      - prod_network
    volumes:
      - ./backend/cmd/uploads:/app/uploads

  db:
    image: postgres:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bala"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bala
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - prod_network

  frontend:
    build:
      context: ./birlik-bala-website
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.birlikbala.kz
      - PORT=3000
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    networks:
      - prod_network
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  pgdata:
  uploads:

networks: 
  prod_network:
    driver: bridge